mishrde
sep_2019 or Sep_2019


sed -i
tar
scripting vs programming
`expr$a + $b`   ---- $(($a + $b))





#!/bin/bash



echo "The first Parameter is $1"
echo "The second Parameter is $2"

echo " The addition of two parameters is : `expr $1 + $2`
"
echo "The Parameters are: $*"
echo "The Parameters are: $@"

echo "The no.of Parameters are: $#"

echo "The script name is: $0"

echo " The process id is: $$"

echo "The exit status of prev. cmd is : $?"

echo "The process id of background running process: $!"






Case Statement


==========



syntax:



case var in



choice1)     -----
			stmts
			------
			;;


choice2)	-----
			stmts
			------
			;;

:

:

esac





 #!/bin/bash



number=0



echo -n "Enter a number > "
read number



echo "Number is $number"


if [ $((number % 2)) -eq 0 ]; 
then
    echo "Number is even"

   else

echo "Number is odd"
fi



#!/bin/bash



read -p "Enter First Numeric Value: "   first

read -p "Enter Second Numeric Value: "  second




if [ $first -le 10  -a  $second -gt 20 ]

  then
      
  echo "OK"

else
  echo "Not OK"
fi


=======================

df -kh >diskspace.txt

awk '{print $5}' diskpace.txt| head -2| grep -1



cat server.txt
machine1
machine2
machine3



#!/bin/bash


while read line
do
  ssh line ; 
   df -kh ;
      if [a gt 90]
           do 
     else
        echo "$line machine is good" 
      fi 

done<server.txt






=================================

case $1 
in

car) echo "The car rental is 100/hr"
        ;;

bike) echo "The bike rental is 50/hr"
        ;;

cycle) echo "The cycle rental is  30/hr"
        ;;


*) echo "**Unknwn Vehicle**"
        ;;

esac




b=10
add(){
a=10
c=$(($a +  $b))
echo "The add is:$c"
}
add
sub(){
echo "the sub is:$(($a - $b))"
}







 
#! /bin/bash 



# To declare static Array  
arr=(prakhar ankit 1 rishabh manish abhinav)
 
 

# To print all elements of array 

echo ${arr[@]}        

echo ${arr[*]}        

echo ${arr[@]:0}     

echo ${arr[*]:0}


# To print first element 

echo ${arr[0]}         

echo ${arr}  


# To print particular element 

echo ${arr[3]}         

echo ${arr[1]}


# To print elements from a particular index 


echo ${arr[@]:0}      

echo ${arr[@]:1} 

echo ${arr[@]:2}      

echo ${arr[0]:1}


# To print elements in range 

echo ${arr[@]:1:4}      

echo ${arr[@]:2:3}      

echo ${arr[0]:1:3}


# Length of Particular element 

echo ${#arr[0]}         

echo ${#arr} 




GIT:

SDLC
1.Planning --->JIRA,SNOW
2.Defining --->Java. .NET
3.Designing --->source code(Git)
  Development --->version
  Control system---> repository 
4.Building --->
5.Testing --->
6.Deployment --->


java--->jar/war/ear-->Maven
.net--->.exe/.msi/.dll-->MS Build
Python--->.py--->py
Mobile apps-->.apk--->gradle




working directory ---->staging area ---->git repository




git --version
yum install git 

git init TestRepo
cd TestRepo

vi file1
git status

git add file1 ----this will add 
git status

git commit -m "this is my initial commit"

git log

git config --global user.name "Deepen Mishra"
git config --global user.email "deepen.mishra1@gmail.com"

get checkout file1----this will remove/discard recent change(before commiting)

get add . ------ will add all files

get revert file1 ---revert the file to older (after commiting)

get log --one line


get reset
git rm file1----



get stash --->to save local changes
get stash apply --> it would come to staging area and you can continue
git stash drop -->
get stash clear



git branch xyz---> create a copy of master and do change u want
git branch ---> to check if bracnh is created
git checkout xyz --->to go branch 

git merge xyz ---> would merge files present in branch(xyz) and master.


git branch -b xyz --> create and linked to branch xyz



branch strageties in companny:
master branch is stable and have develpoment branch, merge is done
and once dev n test branch is done, would goto prod

if any prod issues, create hotfix branch to resolve issues.

Branching startegies(dev--test--prod)


hotfix (after prod go live)
branch
 to resolve the prod fix bugs


Bug fix branch(before go live to prod)





git cherry 

git clone https://github.......
ifup ens33

git pull
git status
git push 
or 
git push origin master

get remote -v

get fetch----only does downloads remote repository
get pull----update local repository with remote changes/repositor (git fetch + git merging)

git remote add repo1

git tag -l

svn vs git?
braching strategies following in your organization?
how you will resolve merge conflicts?
how you will see the history of repository?
how to check last update on the repository?
what is diff git fetch and git pull?
how can i find filename by using commit id?
how you delete the branch by using command line?  git branch -D branch_name
how to create a tag?  git tag -a tag_name


git commit -a -----does commmit to all files


================================================================================================================

MAVEN:
It is ab build tool, compile and give Binaries or Packages.
Builds are artificates like jar/war/

Maven life cycles or goals
1.Clean        ---->Pre-clean ,clean, post clean
2.Default/Build---->Compile,test,package(jar/war),install(local repo i.e .me), deploy(nexus/Jfrog Artifactory)
3.Site(will generate reports or documentation about project)         

Maven has 3 types of repositories.
1.Local repository(.m2)
2.Remote repositories(nexus/Jfrog Artifactory)
3.Central or Online repository

Heart of Maven is POM.xml.
POM-Project object model


mvn --version
mvn -v

java -version
yum install maven

wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz

Always download softwares in /opt directory



Creating maven project:
mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false

tree- check hierarchy of directory

yum install tree -y

vim pom.xml
GroupID
ArtifactID
Version


jar file:
java archive i.e group of .class files

war file:
web archive i.e contains both jar files,html,css.

ear file:
jar +war+j2ee


cd my-apps
mvn package
----it creates a package or jar file in target directory in POM.xml.
cd target


<packaging>war</packaging>


cd myapps
mvn install
cd /root/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT
install packages in .m2


mvn deploy:
It will deploy artifacts into remote repository of maven i.e nexus


Nexus and Jfrog artifactory
https://help.sonatype.com/repomanager3/download


tar -xvzf .tar.gz
cd nexus/
cd bin
./nexus run

nexus is bydeafult runs in 8081 port no
IP:8081
sonatype is started

nexus is repository


firewall-cmd --permanent --zone=public --add-port=8081/tcp

firewall-cmd --reload

ifup ens33



Nexus Installation:
1.sonatype.com/repomanager3/download
2.Select Unix Archive
3.Download wget <link>
4.Extract the tar file:tar -zvzf <filename>
5.Navigate to the bin --->run the nexus script ---> ./nexus run
6.You will get the message started sonatype nexus
7.Open any web browser and give IP:8081
8.Login with username(admin) and password.
9.You need to create a repository (maven hosted)
10.



<distributionManagement>
	
<repository>
		
<id>tata</id>
		<name>Internal Releases</name>
		<url>http://13.127.163.182:8081/repository/scmgalaxy/</url>
	</repository>
 
	<snapshotRepository>
		<id>tata</id>
		<name>Internal Releases</name>
		<url>http://52.66.106.91:8081/nexus/content/repositories/snapshot/</url>
	</snapshotRepository>

</distributionManagement>



under POM.xml, check dependency tag. Thats your oraganization name.
artificates,groupid,dependecies can be multiple.


Scope:
1.Compile
2.Run
3.Provided
4.System
5.Import
6.Test


1. Local repo(.m2)

2. Remote repository(Nexus,Artifactory)

3. Centra


Maven Build profiles:

3 types of build profiles:
per project
per user
global


What is dependieces?
What is java package building?




================================================================================

Jenkins:


SDLC
1.Planning
2.Defining
3.Desiging-->git
4.Building-->maven
5.Depolyment-->




CI/CD ---> Continuous Integration 

CD  ---> Continuous Deployment

CD ---> Continuous Delivery 


===============
CI/CD
====

1. Jenkins ---> Cloudbees Enterprise Jenkins

2. Team City

3. Bamboo

4. Go

5. CircleCI


how to build a job?
click  a new item-----it will show freestyle ---- source code management---fill all details ----click on apply+save then BUILD


how to integrqate git with jenkins?
dashboard---manage jenkins----manage plugins----install github
dashboard---manage jenkins----global tool configuration----fill detais + save


how to build a job pulled from github?
click  a new item-----it will show freestyle ---- source code management(git)----github url paste it----click on apply+save then BUILD


web server vs app server

web servers:
apache
Nginx
IIS


App servers:
Tomcat
WebSphere
Jboss
IIS



windows platform:
jenkins.exe file

jenkins.war file and do:
java -jar jenkins.war


add jenkins repo in yum repository and and run yum install jenkins.


download tomcat and depoly you web application into tomcat/webapps directory


default port of tomcat and jenkins is 8080
tomcat server is only for .war files deployment.

to open port
firewall-cmd --permanent --zone=public --add-port=8080/tcp

firewall-cmd --reload

IP:8080/jenkins


how many projects available in jenkins?
Five:
Freestyle project



192.168.171.129:8080/jenkins/job/test/configure

*/5 * * * ---every 5 mins

5 * * * * ---every hour at x:05 hours 


CI/CD


mvn package


install vs package

deploying war files
cp target/*.war /opt/tomcat/webapp
http://192.168.171.129:8080/scribe-java-webapp/


mvn clean --remove existing target directories



LDAP-light weight drirectory access

how to install pluginsS?
what is extension of plugin?-- .hpi file



I have 100 jenkins jobs, i need to build 100 jobs. how can u build jobs efficiently?
master-slave concept?
how to distibute load for the jenkins?

ifup ens33
firewall-cmd --permanent --zone=public --add-port=8088/tcp
firewall-cmd --reload

java -jar Jenkins.war
java -jar Jenkins.war --httpPort=8081


=================================================================================================

ANSIBLE:

https://www.softwaretestinghelp.com/ansible-tutorial-1/
https://www.softwaretestinghelp.com/ansible-playbooks-ansible-vaults/



need to install s/w in 1000 machines
download s/w and install it.
write script and install


Configuration managment(CM) tools
will automate the admin tasks
gives provisioning


puppet
chef
ansible
salt stack


*All are client server arcihtecture except ansible as ansible is a agentless.

1. Control machine--wherever anisble is installed

2. Playbooks---yaml file which automates specific tasks

3. Inventory---target machines are called inventory


systemctl status httpd




ansible webservers -m file -a 'dest=/home/ansible/deepen.txt state=touch mode=600 owner=ansible group=ansible'

ansible webservers -m file -a "dest=/home/ansible/vndir state=directory mode=755"

ansible webservers -m file -a "dest=/home/ansible/deepen.txt state=absent"


ansible webservers -m file -a "dest=/home/ansible/vndir state=absent"

ansible webservers –m yum -a “name=git state=present” --become


how to write playbooks
yet another markup language(YAML)
YAML are indentation oriented

Playbook.yml
---

Naming section
- name: "Example playbook"
  package: name=git
state=present
;
;


...


 Sections

1. Hosts

2. Variables

3. Tasks



php --version
mysql --version

systemctl status httpd


ansible-playbook <playbook.yml>

/home
cat 
/etc/passwd

ansible-vault create playbook.yml

ansible-vault encrypt playbook.yml
ansible-vault view playbook.yml
ansible-vault rekey playbook.yml



Roles:
ansible-galaxy init apache --offline

tree apache
yum install tree -y


- name: "Install httpd package"
   
  yum: name=httpd state=latest


- name: Copy httpd configuration file
  
  copy: src=httpd.original dest=/etc/httpd/conf/httpd.conf

- name: copy index.html
  copy: src=index.html dest=/var/www/html
    
  notify:
    
  - restart apache



- name: Start and enable httpd service
    
  service: name=httpd state=restarted enabled=yes



- name: restart apache
    
  service: name=httpd state=restarted



- import_tasks: install.yml






======================================================================

DOCKER:


https://docs.docker.com/

https://docs.docker.com/install/linux/docker-ce/centos/
Tomcat Installation:
1. Download tomcat
2. Download java
3. Extract
4. Start tomcat and setting paths

========
can be done by
1.script ---- 500mins
2.Configuration tools-Anisble/chef/puppet---5-10mins
3.Docker------ 5-10 secs

======
Virtualization
1.VM ware --- 5000mb
2. Linux centos---- 5GB
3.RAM ------ 1GB RAM




Disadvantages of virtualization

1.Memory consumption
2.RAM consumption
3.Performance issue
4.Rebooting time is more


Container:
It is very less weight,fast and reliable


images - read only templates



docker --version

docker version

docker info

sudo systemctl start docker

sudo docker run hello-world

sudo docker pull alpine

sudo docker pull ubuntu



Dockerfile
==========
1.FROM
2.WORKDIR
3.RUN
4.CMD
5.ADD
6.COPY
7.ENV
8.EXPOSE
9.ENTRYPOINT
10.MAINTAINER





FROM alpine:latest

RUN apk update

RUN apk add openssh

RUN adduser -g "student user" -D student 
&& mkdir /home/student/.ssh && echo "student:student" | chpasswd

ADD authorized_keys /home/student/.ssh

RUN chown -R student:student /home/student && chmod 700 /home/student && chmod 600 /home/student/.ssh/authorized_keys

RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -q -N ""

EXPOSE 22

CMD ["/usr/sbin/sshd", "-D"] 

vi Dockerfile





ssh-keygen
ssh-copy-id 192.168.171.129 

docker build -t ssh:alpine .

docker images

docker run -d -ti -p 2019:22 --name deepen ssh:alpine

ssh -p 2019 student@localhost

docker search httpd    

docker network ls

docker network create my-vnet

docker network connect my-vnet mybuntu


docker run -d -ti  --name myubuntu ubuntu




docker create --name my-nginx \
  --network my-vnet \
  --publish 8080:80 \
  nginx:latest



docker registry


docker compose and hub?

docker login -u mishrde
docker tag  alpine mishrde/test1
docker push mishrde/test1:tagname

docker push mishrde/test1:alpine


docker compose:
Need for multi-container apps


===================================
curl https://full line -O ------to get it download in file
wget https://full line -O file.txt

/etc/*release* -----to know the OS running
/etc/hosts----details of all hosts
/etc/passwd----to see if an user is enlisted
groupadd devops

useradd -m Deepen ------- will create a user(Deepen) and also create folder(/home/Deepen)
groupadd devops ------ will create group devops
usermod -aG Devops Deepen ----- Will a(append) and G(group) Deepen(user) to devops(group)
gpasswd -M jetha , tapu devops ----- will add multiple(-M) users to devops group 
gpasswd -d tapu devops ----- will delete/remove(-d) from devops group
groupdel devops ---- will delte the group
chmod 700 Deepen ------ (7=4+2+1 , 4=read ,2=write , 1=execute)

-rwxr-xr-x 1 mishrad L2Support 1535 Feb 21  2022 bid_test.sh
             (user)  (group)
			 
			 
changegrp devops bid_test.sh

-rwxr-xr-x 1 mishrad devops 1535 Feb 21  2022 bid_test.sh

grep -r Deepen /home -----will check all folders inside /home
awk '{print}' filename
awk '/Deepen/ {print $1 $2}' logfile




git status
git add origin https://PAT key@yourgithuburl
git remote -v
git push origin master

git revert commitid ----- will revert your last commit and it would become your new commit
git reset commitid -------will revert/unstage. if do git status, it will ask to do commit. Would come at stag  (wkd----stag---commit)

git diff

